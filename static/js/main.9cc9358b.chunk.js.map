{"version":3,"sources":["redux/actionConstants.js","components/Cart.jsx","redux/actions/cart.js","components/Footer.jsx","components/Header.jsx","components/Home.jsx","redux/actions/metaData.js","components/ItemsList.jsx","redux/actions/items.js","components/NotFound.jsx","components/SampleItem.jsx","App.js","reportWebVitals.js","redux/reducers/metaData.js","redux/reducers/items.js","redux/reducers/cart.js","redux/reducers/index.js","redux/store/index.js","serviceWorker.js","index.js"],"names":["GET_ITEM_LIST","ADD_ITEM_TO_CART","UPDATE_ITEM_QUANTITY","CUSTOMER_META_DATA","axios","require","default","config","Cart","props","placeOrder","customerMetaData","post","process","customer_mobile","mobile","customer_name","name","table_no","tableNo","item_list","order","then","response","alert","catch","error","console","log","handleServings","id","val","onUpdateItemQuantity","addToCart","map","item","className","to","src","alt","width","height","style","borderRadius","href","quantity","type","onClick","price","state","this","length","Component","connect","cart","metaData","dispatch","data","Footer","Header","handlePath","history","push","align","navIcon","tabIndex","hasRipple","icon","role","actionItem","aria-label","Home","handleMetaData","onGetCustomerMetaData","label","onTrailingIconSelect","setState","value","leadingIcon","onChange","e","currentTarget","raised","ItemsList","itemList","items","primaryText","secondaryText","setTimeout","render","bind","get","res","onGetItemList","twoLine","list","NotFound","window","location","useStyles","makeStyles","theme","root","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","onAddItemToCart","classes","useState","expanded","setExpanded","description","modifyItem","useParams","item_id","servings","useEffect","fetch","method","json","Card","CardMedia","image","title","CardHeader","CardContent","Typography","variant","component","CardActions","disableSpacing","class","IconButton","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","dotenv","App","basename","exact","path","SampleItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","metaDataReducer","action","itemsReducer","cartReducer","find","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9cc9358b.chunk.js","sourcesContent":["export const MY_SAMPLE='mySample';\nexport const MY_SAMPLE2='mySample2';\n\nexport const GET_ITEM_LIST='getItemList';\nexport const ADD_ITEM_TO_CART = 'addItemToCart'\nexport const UPDATE_ITEM_QUANTITY = 'updateItemQuantity'\nexport const CUSTOMER_META_DATA ='customerMetaData'","import React, { Component } from 'react';\nimport connect from 'react-redux/es/connect/connect';\nimport { Link } from 'react-router-dom';\nimport { onUpdateItemQuantity } from '../redux/actions/cart';\nimport './Cart.css';\n\nconst axios = require('axios').default;\nconst dotenv = require('dotenv');\n\ndotenv.config();\nclass Cart extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    placeOrder = () => {\n        if (this.props.customerMetaData) {\n            axios\n                .post(`${process.env.REACT_APP_BACKEND_HOST}/api/user/order`, {\n                    customer_mobile: this.props.customerMetaData.mobile,\n                    customer_name: this.props.customerMetaData.name,\n                    table_no: this.props.customerMetaData.tableNo,\n                    item_list: this.props.order,\n                })\n                .then(function(response) {\n\n                    alert('Thanks for Ordering!!');\n                })\n                .catch(function(error) {\n                    console.log(error);\n                });\n        } else {\n            alert('something went wrong!');\n        }\n       \n    }\n    handleServings= (id,val) =>{\n        //console.log(this.props.order);\n        this.props.onUpdateItemQuantity({\"id\":id,\"val\":val})\n    }\n    addToCart = () =>(\n        this.props.order?(\n            this.props.order.map((item)=>(\n                <div className=\"cart-item\"  key={item.id}>\n                    <div className=\"cart-item-figure\"> \n                    <Link to={`/items/${item.id}`}>\n                        <img \n                            src=\"/images/recipe.jpg\" \n                            alt=\"r\" \n                            width=\"60\" \n                            height=\"60\" \n                            style= {{borderRadius:\"100%\"}}\n                        />\n                    </Link> \n                    </div>\n                    <div className=\"cart-item-middle\">\n                        <div className=\"cart-item-middle-name\">{item.name}</div>\n                        <div className=\"cart-item-middle-quantity\">\n                            <div>\n                                <svg className=\"cart-item-servings-icon\">\n                                    <use href=\"/images/icons.svg#icon-man\" />\n                                </svg>\n                            </div>\n                            <div className=\"cart-item-servings-data\">\n                                <span className=\"cart-item-servings-count\">{item.quantity}</span>\n                                <span className=\"cart-item-servings-text\"> SERVINGS</span>\n                            </div>\n                            <div className=\"cart-item-servings-inc-dec-buttons\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn-tiny btn-decrease\"\n                                    onClick={() => this.handleServings(item.id, -1)}\n                                >\n                                    <svg>\n                                        <use href=\"/images/icons.svg#icon-circle-with-minus\" />\n                                    </svg>\n                                </button>\n                                \n                                <button\n                                    type=\"button\"\n                                    className=\"btn-tiny btn-increase\"\n                                    onClick={() => this.handleServings(item.id, 1)}\n                                >\n                                    <svg>\n                                        <use href=\"/images/icons.svg#icon-circle-with-plus\" />\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"cart-item-price\">\n                        <h3>{item.price * item.quantity}/-</h3>\n                    </div>\n                </div>\n            ))\n        ) : (\n            <div />\n        )\n    )\n    \n\n    render() {\n        return (\n            <div className=\"cart\">\n                <Link to=\"/items\">View all items</Link>\n                <h1>Cart</h1>\n                <h3>{this.props.order.length} items in Cart</h3>\n                <this.addToCart />\n                <div className=\"cart-place-order\">\n                    <button type=\"button\" onClick={this.placeOrder}>\n                        PlaceOrder\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        order: state.cart.order,\n        customerMetaData: state.metaData.customerMetaData,\n    };\n};\nconst mapDispatchToProps = dispatch => ({\n    onUpdateItemQuantity: data => dispatch(onUpdateItemQuantity(data)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import { ADD_ITEM_TO_CART , UPDATE_ITEM_QUANTITY} from '../actionConstants';\n\nconst onAddItemToCart = (data)=>({\n    type:ADD_ITEM_TO_CART,\n    data\n})\n\nconst onUpdateItemQuantity = (data) =>({\n    type:UPDATE_ITEM_QUANTITY,\n    data\n})\n\nexport {onAddItemToCart,onUpdateItemQuantity};","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>you are in footer</h1>\n            </div>\n        );\n    }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport TopAppBar, { TopAppBarIcon, TopAppBarRow, TopAppBarSection, TopAppBarTitle } from '@material/react-top-app-bar';\nimport MaterialIcon from '@material/react-material-icon';\n\nimport '@material/react-top-app-bar/dist/top-app-bar.css';\nimport '@material/react-material-icon/dist/material-icon.css';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        // console.log(browserHistory);\n    }\n\n    handlePath = () => {\n        this.props.history.push(`/cart`);\n    };\n\n    render() {\n        return (\n            <div>\n                <TopAppBar>\n                    <TopAppBarRow>\n                        <TopAppBarSection align=\"start\">\n                            <TopAppBarIcon navIcon tabIndex={0}>\n                                <MaterialIcon hasRipple icon=\"menu\" onClick={() => console.log('click')} />\n                            </TopAppBarIcon>\n                            <TopAppBarTitle>Restaurent</TopAppBarTitle>\n                        </TopAppBarSection>\n                        <TopAppBarSection align=\"end\" role=\"toolbar\">\n                            <TopAppBarIcon actionItem tabIndex={0}>\n                                <Link to=\"/cart\">\n                                    <MaterialIcon\n                                        aria-label=\"print page\"\n                                        hasRipple\n                                        icon=\"shopping_cart\"\n                                        // onClick={()=>{this.props.history&&this.props.history.push(`/cart`)}}\n                                    />\n                                </Link>\n\n                                {/* <button class=\"btn-small recipe__btn recipe__btn recipe__btn--add\" onClick={()=>console.log(this.props)}>\n                            <svg class=\"search__icon\">\n                                <use href=\"/images/icons.svg#icon-shopping-cart\"></use>\n                            </svg>\n                        </button> */}\n                            </TopAppBarIcon>\n                        </TopAppBarSection>\n                    </TopAppBarRow>\n                </TopAppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import Button from '@material/react-button';\nimport '@material/react-button/dist/button.css';\nimport MaterialIcon from '@material/react-material-icon';\nimport '@material/react-material-icon/dist/material-icon.css';\nimport TextField, { Input } from '@material/react-text-field';\nimport '@material/react-text-field/dist/text-field.css';\nimport React, { Component } from 'react';\nimport connect from 'react-redux/es/connect/connect';\nimport { onGetCustomerMetaData } from '../redux/actions/metaData';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            tableNo: '',\n            mobile: '',\n        };\n    }\n\n    handleMetaData = () => {\n        this.props.onGetCustomerMetaData(this.state);\n        this.props.history.push('/items');\n    };\n\n    render() {\n        return (\n            <div>\n                <br />\n                <TextField\n                    label=\"Name\"\n                    onTrailingIconSelect={() => this.setState({ value: '' })}\n                    leadingIcon={<MaterialIcon icon=\"account_circle\" />}\n                >\n                    <Input\n                        id=\"name\"\n                        value={this.state.name}\n                        onChange={e => this.setState({ name: e.currentTarget.value })}\n                    />\n                </TextField>\n                <br />\n                <br />\n                <TextField\n                    label=\"Mobile Number\"\n                    onTrailingIconSelect={() => this.setState({ value: '' })}\n                    leadingIcon={<MaterialIcon icon=\"call\" />}\n                >\n                    <Input\n                        id=\"mobile\"\n                        value={this.state.mobile}\n                        onChange={e => this.setState({ mobile: e.currentTarget.value })}\n                    />\n                </TextField>\n                <br />\n                <br />\n                <TextField label=\"Table Number\" id=\"table\" leadingIcon={<MaterialIcon icon=\"restaurant_menu\" />}>\n                    <Input\n                        value={this.state.tableNo}\n                        onChange={e => this.setState({ tableNo: e.currentTarget.value })}\n                    />\n                </TextField>\n                <br />\n                <br />\n\n                <Button icon={<MaterialIcon icon=\"restaurant\" />} raised onClick={this.handleMetaData}>\n                    Start Ordering\n                </Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        customerMetaData: state.metaData.customerMetaData,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetCustomerMetaData: data => dispatch(onGetCustomerMetaData(data)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { CUSTOMER_META_DATA } from '../actionConstants';\n\nconst onGetCustomerMetaData = (data) => ({\n    type: CUSTOMER_META_DATA,\n    data\n});\n\nexport { onGetCustomerMetaData };\n","import React, { Component} from 'react'\nimport connect from 'react-redux/es/connect/connect';\nimport '@material/react-list/dist/list.css';\nimport List, {ListItem, ListItemText} from '@material/react-list';\nimport {onGetItemList} from '../redux/actions/items';\nconst axios=require('axios').default;\nconst dotenv = require('dotenv');\ndotenv.config();\nclass ItemsList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n  \n    async componentDidMount(){\n        setTimeout(function() { //Start the timer\n         this.setState({render:true})//After 1 second, set render to true\n     }.bind(this), 1000)\n      //console.log(process.env.REACT_APP_BACKEND_HOST);\n       const res =await axios.get(`${process.env.REACT_APP_BACKEND_HOST}/api/user/item`)\n       this.props.onGetItemList(await res.data)\n    }\n    itemList = () =>(\n        this.props.items?(\n                this.props.items.map((item)=>(\n                <ListItem key={item.id} onClick={()=>{this.props.history.push(`/items/${item.id}`)}}>\n                    <img src=\"/images/recipe.jpg\" alt=\"r\" width=\"60\" height=\"60\" style= {{borderRadius:\"100%\"}}/>\n                    <ListItemText\n                        primaryText={item.name}\n                        secondaryText={item.price} />\n                </ListItem>\n                ))\n            ):(<div/>)\n    )\n    render() {\n        return (\n                <div>\n                    <List twoLine>\n                        <this.itemList/>\n                    </List>\n                </div>  \n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        items: state.items.list,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetItemList: data => dispatch(onGetItemList(data)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsList);\n","import { GET_ITEM_LIST } from '../actionConstants';\n\nconst onGetItemList = (data) => ({\n    type: GET_ITEM_LIST,\n    data\n});\n\n\n\nexport { onGetItemList};\n","import React from 'react'\n\nconst NotFound = () =>{\n    console.log(window.location);\n    return  <div><h1>Page Not Found</h1></div>\n}\n\nexport default NotFound;\n\n","import React,{useState,useEffect} from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport connect from 'react-redux/es/connect/connect';\nimport './styles.css';\nimport {onAddItemToCart} from '../redux/actions/cart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nconst dotenv = require('dotenv');\ndotenv.config();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n \n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nfunction SampleItem(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [item,modifyItem] = useState({id:\"\",name:\"\",price:\"\",description:\"\",quantity:1});\n  const id=useParams().item_id;\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const handleServings = (val) =>{\n    const servings=item.quantity+val;\n    if(servings>=1)\n    modifyItem({...item,\"quantity\":servings});\n  }\n  \n  useEffect(() => {\n    fetch(\n      `${process.env.REACT_APP_BACKEND_HOST}/api/user/item/${id}`,\n      {\n        method: \"GET\",\n        // headers: new Headers({\n        //   Accept: \"application/vnd.github.cloak-preview\"\n        // })\n      }\n    )\n      .then(res => res.json())\n      .then(response => {\n        //console.log(response)\n        \n        modifyItem({...response,\"quantity\":1})\n\n      })\n      .catch(error => console.log(error));\n  },[id] );\n  return (\n    \n    <Card className={classes.root} id=\"recipe\">\n      <Link to=\"/items\">View all items</Link>\n      <CardMedia\n        className={classes.media} id=\"recipe__fig\"\n        \n        image=\"/images/recipe.jpg\"\n        title={item.name}\n      />\n      <CardHeader className=\"recipe__title\" \n        // avatar={\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n        //     R\n        //   </Avatar>\n        // }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        \n        title={item.name}\n        \n      />\n      <CardContent>\n      <Typography variant=\"h5\" component=\"h2\">\n          PRICE : {item.price}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing className=\"recipe__info\">\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n      {/* <div className=\"recipe-info\"> */}\n          <svg className=\"recipe__info-icon\">\n              <use href=\"/images/icons.svg#icon-man\"></use>\n          </svg>\n          <span className=\"recipe__info-data recipe__info-data--people\">{item.quantity}</span>\n          <span className=\"recipe__info-text\"> SERVINGS</span>\n{/* \n          <div class=\"recipe__info-buttons\"> */}\n          <CardActions disableSpacing className=\"recipe__info-buttons\">\n              <button className=\"btn-tiny btn-decrease\"  onClick={()=>{handleServings(-1)}}>\n                  <svg>\n                      <use href=\"/images/icons.svg#icon-circle-with-minus\"></use>\n                  </svg>\n              </button>\n              <button className=\"btn-tiny btn-increase\"  onClick={()=>{handleServings(1)}}>\n                  <svg>\n                      <use href=\"/images/icons.svg#icon-circle-with-plus\"></use>\n                  </svg>\n              </button>\n          </CardActions>\n          {/* <button className=\"recipe__love\">\n            <svg className=\"header__likes\">\n                <use href=\"/images/icons.svg#icon-heart\"></use>\n            </svg>\n            \n        </button> */}\n\n        <button class=\"btn-small recipe__btn recipe__btn recipe__btn--add\" onClick={()=>props.onAddItemToCart(item)}>\n            <svg class=\"search__icon\">\n                <use href=\"/images/icons.svg#icon-shopping-cart\"></use>\n            </svg>\n            <span>Add to cart</span>\n        </button>\n          {/* </div> */}\n      {/* </div> */}\n        \n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Description:</Typography>\n          <Typography paragraph>\n            {item.description}\n          </Typography>\n          {/* <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\n            minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\n          </Typography> */}\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n      order: state.cart.order,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onAddItemToCart: data => dispatch(onAddItemToCart(data)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(SampleItem);\n","/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-filename-extension */\nimport { TopAppBarFixedAdjust } from '@material/react-top-app-bar';\nimport dotenv from 'dotenv';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Cart from './components/Cart';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport ItemsList from './components/ItemsList';\nimport NotFound from './components/NotFound';\nimport SampleItem from './components/SampleItem';\n\ndotenv.config();\nfunction App() {\n    console.log('hello World');\n    return (\n        <div className=\"App\">\n            <Router basename={process.env.REACT_APP_HOMEPAGE}>\n                <Header />\n                <TopAppBarFixedAdjust>\n                    <br />\n                    <div className=\"app-main-area\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/items\" component={ItemsList} />\n                            <Route exact path=\"/items/:item_id\" component={SampleItem} />\n                            <Route exact path=\"/cart\" component={Cart} />\n                            <Route path=\"*\" component={NotFound} />\n                        </Switch>\n                    </div>\n                </TopAppBarFixedAdjust>\n                <Footer />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CUSTOMER_META_DATA } from '../actionConstants';\n\nfunction metaDataReducer(state, action) {\n    switch (action.type) {\n        case CUSTOMER_META_DATA:\n            console.log(action.data);\n            return { ...state, customerMetaData:{...action.data }};\n        default:\n            return state || {};\n    }\n}\n\nexport default metaDataReducer;\n","import { GET_ITEM_LIST } from '../actionConstants';\nfunction itemsReducer(state, action) {\n    switch (action.type) {\n        case GET_ITEM_LIST:\n            return { ...state, list:[...action.data] };\n        default:\n            return state || {};\n    }\n}\n\nexport default itemsReducer;\n","import {ADD_ITEM_TO_CART,UPDATE_ITEM_QUANTITY} from '../actionConstants'\nfunction cartReducer(state, action) {\n    let order=[];\n    let item;\n    switch (action.type) {\n        case ADD_ITEM_TO_CART:\n            // if(state.order)\n            //     order=[...state.order]\n            order=[...state.order,action.data]\n            return { ...state, order };\n        case UPDATE_ITEM_QUANTITY:\n            console.log(action.data);\n            order=[...state.order];\n            item = order.find( ({ id }) => id === action.data.id);\n            if(item.quantity+action.data.val>=1)\n              item.quantity+=action.data.val;\n            return {...state,order};\n\n        default:\n            return state || {order: []};\n    }\n}\n\n\nexport default cartReducer;","import { combineReducers } from 'redux';\nimport metaDataReducer from './metaData';\nimport itemsReducer from './items';\nimport cartReducer from './cart';\n\nconst rootReducer = combineReducers({\n    metaData: metaDataReducer,\n    items: itemsReducer,\n    cart: cartReducer\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.register();\n"],"sourceRoot":""}