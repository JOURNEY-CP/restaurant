[{"/mnt/d/workspace/journey/restaurant/frontend/src/index.js":"1","/mnt/d/workspace/journey/restaurant/frontend/src/reportWebVitals.js":"2","/mnt/d/workspace/journey/restaurant/frontend/src/App.js":"3","/mnt/d/workspace/journey/restaurant/frontend/src/components/Footer.jsx":"4","/mnt/d/workspace/journey/restaurant/frontend/src/components/NotFound.jsx":"5","/mnt/d/workspace/journey/restaurant/frontend/src/components/Header.jsx":"6","/mnt/d/workspace/journey/restaurant/frontend/src/components/Home.jsx":"7"},{"size":500,"mtime":1616649986509,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1609870052522,"results":"10","hashOfConfig":"9"},{"size":555,"mtime":1616649986484,"results":"11","hashOfConfig":"9"},{"size":229,"mtime":1616649986486,"results":"12","hashOfConfig":"9"},{"size":127,"mtime":1616649986495,"results":"13","hashOfConfig":"9"},{"size":233,"mtime":1616649986491,"results":"14","hashOfConfig":"9"},{"size":228,"mtime":1616649986493,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r4328f",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},"/mnt/d/workspace/journey/restaurant/frontend/src/index.js",[],"/mnt/d/workspace/journey/restaurant/frontend/src/reportWebVitals.js",[],["32","33"],"/mnt/d/workspace/journey/restaurant/frontend/src/App.js",[],"/mnt/d/workspace/journey/restaurant/frontend/src/components/Footer.jsx",[],"/mnt/d/workspace/journey/restaurant/frontend/src/components/NotFound.jsx",[],"/mnt/d/workspace/journey/restaurant/frontend/src/components/Header.jsx",[],"/mnt/d/workspace/journey/restaurant/frontend/src/components/Home.jsx",["34"],"import React, { Component } from 'react'\nimport connect from 'react-redux/es/connect/connect';\nimport {onGetCustomerMetaData} from '../redux/actions/metaData';\nimport TextField, {Input} from '@material/react-text-field';\nimport MaterialIcon from '@material/react-material-icon';\nimport '@material/react-material-icon/dist/material-icon.css';\nimport '@material/react-text-field/dist/text-field.css';\nimport '@material/react-button/dist/button.css';\nimport Button from '@material/react-button';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            tableNo:'',\n            mobile:'',\n        };\n    }\n    handleMetaData = ()=>{\n        this.props.onGetCustomerMetaData(this.state);\n        this.props.history.push(\"/items\");\n    }\n\n    render() {\n        return (\n            <div>\n            <br/>\n                <TextField\n                    label='Name'\n                    onTrailingIconSelect={() => this.setState({value: ''})}\n                    leadingIcon={<MaterialIcon icon=\"account_circle\"/>}\n                >\n                    <Input\n                        id=\"name\"\n                        value={this.state.name}\n                        onChange={(e) => this.setState({name: e.currentTarget.value})} \n                    />\n                </TextField>\n                <br/>\n                <br/>\n                <TextField\n                    label='Mobile Number'\n                    onTrailingIconSelect={() => this.setState({value: ''})}\n                    leadingIcon={<MaterialIcon icon=\"call\"/>}\n                >\n                    <Input\n                        id=\"mobile\"\n                        value={this.state.mobile}\n                        onChange={(e) => this.setState({mobile: e.currentTarget.value})} \n                    />\n                </TextField>\n                <br/>\n                <br/>\n                <TextField\n                    label='Table Number'\n                    id=\"table\"\n                    leadingIcon={<MaterialIcon icon=\"restaurant_menu\"/>}\n                >\n                    <Input\n                        value={this.state.tableNo}\n                        onChange={(e) => this.setState({tableNo: e.currentTarget.value})} \n                    />\n                </TextField>\n                <br/>\n                <br/>\n                \n                <Button \n                    icon={<MaterialIcon icon=\"restaurant\"/>}\n                    raised\n                    onClick={this.handleMetaData}\n                >\n                    Start Ordering\n                </Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        customerMetaData: state.metaData.customerMetaData,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetCustomerMetaData: data => dispatch(onGetCustomerMetaData(data)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":10,"column":10,"nodeType":"41","messageId":"42","endLine":10,"endColumn":18},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]